{
    "openapi": "3.0.3",
    "info": {
        "title": "Buss-in-it API",
        "version": "1.0.0",
        "description": "API for the Buss-in-it web game."
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Hello endpoint",
                "responses": {
                    "200": {
                        "description": "A friendly greeting",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "example": {
                                        "value": "Hello from Flask!"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "nickname": {
                                                "type": "string"
                                            },
                                            "cumulativeScore": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Create a new user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already exists"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "User login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad email or password"
                    }
                }
            }
        },
        "/auth/friend-requests": {
            "post": {
                "summary": "Send a friend request",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiverId": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "receiverId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Friend request sent"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "409": {
                        "description": "Friend request already sent or received or users are already friends"
                    }
                }
            }
        },
        "/auth/friend-requests/pending": {
            "get": {
                "summary": "Get pending friend requests",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of pending friend requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "senderId": {
                                                "type": "integer"
                                            },
                                            "nickname": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/friend-requests/handle": {
            "post": {
                "summary": "Handle a friend request",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "senderId": {
                                        "type": "integer"
                                    },
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "accept",
                                            "reject"
                                        ]
                                    }
                                },
                                "required": [
                                    "senderId",
                                    "action"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request handled"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Friend request not found"
                    }
                }
            }
        },
        "/auth/friends": {
            "get": {
                "summary": "Get friends list",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of friends",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "nickname": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "cumulativeScore": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trips": {
            "get": {
                "summary": "Get all trips",
                "responses": {
                    "200": {
                        "description": "A list of trips",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "outcome": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new trip",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tripId": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "tripId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Trip created"
                    },
                    "403": {
                        "description": "Trip not from route 37807"
                    },
                    "404": {
                        "description": "Trip not found in GTFS data"
                    },
                    "409": {
                        "description": "Trip already exists"
                    }
                }
            }
        },
        "/trips/{tripId}": {
            "get": {
                "summary": "Get a single trip",
                "parameters": [
                    {
                        "name": "tripId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single trip",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "outcome": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trip not found"
                    }
                }
            }
        },
        "/trips/{tripId}/resolve": {
            "post": {
                "summary": "Resolve a trip",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tripId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "outcome": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "outcome"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trip resolved"
                    }
                }
            }
        },
        "/predictions": {
            "get": {
                "summary": "Get user's predictions",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of predictions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "tripId": {
                                                "type": "integer"
                                            },
                                            "predictedOutcome": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Cast a prediction",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tripId": {
                                        "type": "string"
                                    },
                                    "predictedOutcome": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "tripId",
                                    "predictedOutcome"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Prediction created"
                    },
                    "409": {
                        "description": "Prediction already exists"
                    }
                }
            }
        },
        "/routes/{routeId}/trips": {
            "get": {
                "summary": "Get trips for a route",
                "parameters": [
                    {
                        "name": "routeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of trips for the route",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "route_id": {
                                            "type": "integer"
                                        },
                                        "route_name": {
                                            "type": "string"
                                        },
                                        "trips": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "trip_id": {
                                                        "type": "integer"
                                                    },
                                                    "stop_times": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Route not found"
                    }
                }
            }
        }
    }
}
